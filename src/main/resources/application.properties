spring.application.name=backend-gs

# Configurações do servidor
server.port=8080
server.servlet.context-path=/

# Configurações do banco de dados MySQL
spring.datasource.url=jdbc:mysql://localhost:3306/password_generator_db?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
spring.datasource.username=root
spring.datasource.password=root
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect

# Durante os testes iniciais, use create para recriar as tabelas e verificar se tudo está funcionando
# Depois mude para update para produção
spring.jpa.hibernate.ddl-auto=update

# Configurações adicionais do MySQL
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.datasource.hikari.maximum-pool-size=10

# Desabilitando o console H2 (não é mais necessário)
spring.h2.console.enabled=false

# Configurações do Hibernate
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# Configurações de logging
logging.level.org.springframework.security=DEBUG
logging.level.com.pietro.backendgs=DEBUG
logging.level.com.pietro.backendgs.security=TRACE
logging.level.com.pietro.backendgs.auth=TRACE
logging.level.org.springframework.web.filter=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql=TRACE

# Para configurações JWT personalizadas, veja o arquivo jwt.properties
